{"version":3,"sources":["logo.svg","services/ArticleService.js","components/ListArticleComponent.jsx","components/HeaderComponent.js","components/FooterComponent.jsx","components/CreateArticleComponent.jsx","components/UpdateArticleComponent.jsx","components/ViewArticleComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ARTICLE_API_BASE_URL","axios","get","article","post","articleId","put","delete","ListArticleComponent","props","state","articles","addArticle","bind","editArticle","deleteArticle","id","ArticleService","then","res","setState","filter","this","history","push","getArticles","data","className","onClick","map","key","title","body","style","marginLeft","viewArticle","Component","HeaderComponent","href","FooterComponent","CreateArticleComponent","saveOrUpdateArticle","e","preventDefault","console","log","JSON","stringify","createArticle","updateArticle","changeTitleHandler","event","target","value","changeBodyHandler","match","params","getArticleById","getTitle","placeholder","name","onChange","cancel","UpdateArticleComponent","ViewArticleComponent","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.70854843.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import axios from 'axios';\n\nconst ARTICLE_API_BASE_URL = \"http://localhost:8080/api/v1/articles\";\n\nclass ArticleService {\n\n    getArticles(){\n        return axios.get(ARTICLE_API_BASE_URL);\n    }\n\n    createArticle(article){\n        return axios.post(ARTICLE_API_BASE_URL, article);\n    }\n\n    getArticleById(articleId){\n        return axios.get(ARTICLE_API_BASE_URL + '/' + articleId);\n    }\n\n    updateArticle(article, articleId){\n        return axios.put(ARTICLE_API_BASE_URL + '/' + articleId, article);\n    }\n\n    deleteArticle(articleId){\n        return axios.delete(ARTICLE_API_BASE_URL + '/' + articleId);\n    }\n}\n\nexport default new ArticleService()","import React, { Component } from 'react'\nimport ArticleService from '../services/ArticleService'\n\nclass ListArticleComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            articles: []\n        }\n        this.addArticle = this.addArticle.bind(this);\n        this.editArticle = this.editArticle.bind(this);\n        this.deleteArticle = this.deleteArticle.bind(this);\n    }\n\n    deleteArticle(id){\n        ArticleService.deleteArticle(id).then( res => {\n            this.setState({articles: this.state.articles.filter(article => article.id !== id)});\n        });\n    }\n    viewArticle(id){\n        this.props.history.push(`/view-article/${id}`);\n    }\n    editArticle(id){\n        this.props.history.push(`/add-article/${id}`);\n    }\n\n    componentDidMount(){\n        ArticleService.getArticles().then((res) => {\n            this.setState({ articles: res.data});\n        });\n    }\n\n    addArticle(){\n        this.props.history.push('/add-article/_add');\n    }\n\n    render() {\n        return (\n            <div>\n                <h2 className=\"text-center\">Articles List</h2>\n                <div className = \"row\">\n                    <button className=\"btn btn-primary\" onClick={this.addArticle}> Add Article</button>\n                </div>\n                <br></br>\n                <div className = \"row\">\n                    <table className = \"table table-striped table-bordered\">\n\n                        <thead>\n                        <tr>\n                            <th> Title</th>\n                            <th> Body</th>\n                            <th> Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            this.state.articles.map(\n                                article =>\n                                    <tr key = {article.id}>\n                                        <td> { article.title} </td>\n                                        <td> {article.body}</td>\n                                        <td>\n                                            <button onClick={ () => this.editArticle(article.id)} className=\"btn btn-info\">Update </button>\n                                            <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteArticle(article.id)} className=\"btn btn-danger\">Delete </button>\n                                            <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewArticle(article.id)} className=\"btn btn-info\">View </button>\n                                        </td>\n                                    </tr>\n                            )\n                        }\n                        </tbody>\n                    </table>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default ListArticleComponent","import React, { Component } from 'react'\n\nclass HeaderComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <header>\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                        <div><a href=\"https://javaguides.net\" className=\"navbar-brand\">Article Management App</a></div>\n                    </nav>\n                </header>\n            </div>\n        )\n    }\n}\n\nexport default HeaderComponent","import React, { Component } from 'react'\n\nclass FooterComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <footer className = \"footer\">\n                    <span className=\"text-muted\">All Rights Reserved 2020 @JavaGuides</span>\n                </footer>\n            </div>\n        )\n    }\n}\n\nexport default FooterComponent","import React, { Component } from 'react'\nimport ArticleService from '../services/ArticleService';\n\nclass CreateArticleComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            // step 2\n            id: this.props.match.params.id,\n            title: '',\n            body: ''\n        }\n        this.changeTitleHandler = this.changeTitleHandler.bind(this);\n        this.changeBodyHandler = this.changeBodyHandler.bind(this);\n        this.saveOrUpdateArticle = this.saveOrUpdateArticle.bind(this);\n    }\n\n    // step 3\n    componentDidMount(){\n\n        // step 4\n        if(this.state.id === '_add'){\n            return\n        }else{\n            ArticleService.getArticleById(this.state.id).then( (res) =>{\n                let article = res.data;\n                this.setState({title: article.title,\n                    body: article.body\n                });\n            });\n        }\n    }\n    saveOrUpdateArticle = (e) => {\n        e.preventDefault();\n        let article = {title: this.state.title, body: this.state.body};\n        console.log('article => ' + JSON.stringify(article));\n\n        // step 5\n        if(this.state.id === '_add'){\n            ArticleService.createArticle(article).then(res =>{\n                this.props.history.push('/articles');\n            });\n        }else{\n            ArticleService.updateArticle(article, this.state.id).then( res => {\n                this.props.history.push('/articles');\n            });\n        }\n    }\n\n    changeTitleHandler= (event) => {\n        this.setState({title: event.target.value});\n    }\n\n    changeBodyHandler= (event) => {\n        this.setState({body: event.target.value});\n    }\n\n    cancel(){\n        this.props.history.push('/articles');\n    }\n\n    getTitle(){\n        if(this.state.id === '_add'){\n            return <h3 className=\"text-center\">Add Article</h3>\n        }else{\n            return <h3 className=\"text-center\">Update Article</h3>\n        }\n    }\n    render() {\n        return (\n            <div>\n                <br></br>\n                <div className = \"container\">\n                    <div className = \"row\">\n                        <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                            {\n                                this.getTitle()\n                            }\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group\">\n                                        <label> Title: </label>\n                                        <input placeholder=\"Title\" name=\"title\" className=\"form-control\"\n                                               value={this.state.title} onChange={this.changeTitleHandler}/>\n                                    </div>\n                                    <div className = \"form-group\">\n                                        <label> Body: </label>\n                                        <input placeholder=\"Body\" name=\"body\" className=\"form-control\"\n                                               value={this.state.body} onChange={this.changeBodyHandler}/>\n                                    </div>\n                                    <button className=\"btn btn-success\" onClick={this.saveOrUpdateArticle}>Save</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateArticleComponent","import React, { Component } from 'react'\nimport ArticleService from '../services/ArticleService';\n\nclass UpdateArticleComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            title: '',\n            body: ''\n        }\n        this.changeTitleHandler = this.changeTitleHandler.bind(this);\n        this.changeBodyHandler = this.changeBodyHandler.bind(this);\n        this.updateArticle = this.updateArticle.bind(this);\n    }\n\n    componentDidMount(){\n        ArticleService.getArticleById(this.state.id).then( (res) =>{\n            let article = res.data;\n            this.setState({title: article.title,\n                body: article.body\n            });\n        });\n    }\n\n    updateArticle = (e) => {\n        e.preventDefault();\n        let article = {title: this.state.title, body: this.state.body};\n        console.log('article => ' + JSON.stringify(article));\n        console.log('id => ' + JSON.stringify(this.state.id));\n        ArticleService.updateArticle(article, this.state.id).then( res => {\n            this.props.history.push('/articles');\n        });\n    }\n\n    changeTitleHandler= (event) => {\n        this.setState({title: event.target.value});\n    }\n\n    changeBodyHandler= (event) => {\n        this.setState({body: event.target.value});\n    }\n\n    cancel(){\n        this.props.history.push('/articles');\n    }\n\n    render() {\n        return (\n            <div>\n                <br></br>\n                <div className = \"container\">\n                    <div className = \"row\">\n                        <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\">Update Article</h3>\n                            <div className = \"card-body\">\n                                <form>\n                                    <div className = \"form-group\">\n                                        <label> Title: </label>\n                                        <input placeholder=\"Title\" name=\"title\" className=\"form-control\"\n                                               value={this.state.title} onChange={this.changeTitleHandler}/>\n                                    </div>\n                                    <div className = \"form-group\">\n                                        <label> Body: </label>\n                                        <input placeholder=\"Body\" name=\"body\" className=\"form-control\"\n                                               value={this.state.body} onChange={this.changeBodyHandler}/>\n                                    </div>\n                                    <button className=\"btn btn-success\" onClick={this.updateArticle}>Save</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UpdateArticleComponent","import React, { Component } from 'react'\nimport ArticleService from '../services/ArticleService'\n\nclass ViewArticleComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            article: {}\n        }\n    }\n\n    componentDidMount(){\n        ArticleService.getArticleById(this.state.id).then( res => {\n            this.setState({article: res.data});\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <br></br>\n                <div className = \"card col-md-6 offset-md-3\">\n                    <h3 className = \"text-center\"> View Article Details</h3>\n                    <div className = \"card-body\">\n                        <div className = \"row\">\n                            <label> Title: </label>\n                            <div> { this.state.article.title }</div>\n                        </div>\n                        <div className = \"row\">\n                            <label> Body: </label>\n                            <div> { this.state.article.body }</div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ViewArticleComponent","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport ListArticleComponent from './components/ListArticleComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport FooterComponent from './components/FooterComponent';\nimport CreateArticleComponent from './components/CreateArticleComponent';\nimport UpdateArticleComponent from './components/UpdateArticleComponent';\nimport ViewArticleComponent from './components/ViewArticleComponent';\n\nfunction App() {\n    return (\n        <div>\n          <Router>\n            <HeaderComponent />\n            <div className=\"container\">\n              <Switch>\n                <Route path = \"/\" exact component = {ListArticleComponent}></Route>\n                <Route path = \"/articles\" component = {ListArticleComponent}></Route>\n                <Route path = \"/add-article/:id\" component = {CreateArticleComponent}></Route>\n                <Route path = \"/view-article/:id\" component = {ViewArticleComponent}></Route>\n                <Route path = \"/update-article/:id\" component = {UpdateArticleComponent}></Route>\n              </Switch>\n            </div>\n            <FooterComponent />\n          </Router>\n        </div>\n\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}